version: '3.8'

services:
  # MongoDB Database (Development)
  mongodb:
    image: mongo:7.0
    container_name: swasthvault-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: swasthvault_admin_password
      MONGO_INITDB_DATABASE: swasthvault
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
      - mongodb_dev_config:/data/configdb
      - ./deployment/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - swasthvault-dev-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache (Development)
  redis:
    image: redis:7.2-alpine
    container_name: swasthvault-redis-dev
    restart: unless-stopped
    command: redis-server --requirepass swasthvault_redis_password --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
      - ./deployment/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - swasthvault-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # MongoDB Admin UI (Development only)
  mongo-express:
    image: mongo-express:latest
    container_name: swasthvault-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: swasthvault_admin_password
      ME_CONFIG_MONGODB_URL: mongodb://admin:swasthvault_admin_password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - swasthvault-dev-network

  # Redis Commander (Development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: swasthvault-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:swasthvault_redis_password
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - swasthvault-dev-network

volumes:
  mongodb_dev_data:
    driver: local
  mongodb_dev_config:
    driver: local
  redis_dev_data:
    driver: local

networks:
  swasthvault-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
